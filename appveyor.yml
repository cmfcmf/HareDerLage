version: '{build}'

clone_folder: c:\game

platform: x64
image: Visual Studio 2017

# The following line can be enabled to allow a RDP connection to the machine
# Connection details will be displayed in the build log.
# Be aware that everyone who sees the log can connect to the machine.
# If you want to keep the RDP connection open even after the last command
# has run, enable the on_finish block as well.
# https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

cache:
  - c:\game-tmp -> appveyor.yml

before_build:
  - ps: |-
        mkdir c:\game-build\windows
        mkdir c:\game-build\linux
        mkdir c:\game-build\mac
        mkdir c:\game-build\html
        mkdir c:\game-tmp
        cd c:\game-tmp

  # Install OpenGL 3
  - ps: |-
        if (!(Test-Path 'opengl.tar.xz')) {
          Start-FileDownload 'https://sourceforge.net/projects/msys2/files/REPOS/MINGW/x86_64/mingw-w64-x86_64-mesa-17.0.0-1-any.pkg.tar.xz/download' -fileName opengl.tar.xz
          7z x opengl.tar.xz
          7z x opengl.tar
          mv mingw64/bin/* .
        }

  # Install Godot
  - ps: |-
        if (!(Test-Path 'godot.exe')) {
          Start-FileDownload 'https://downloads.tuxfamily.org/godotengine/3.0.2/Godot_v3.0.2-stable_win64.exe.zip'
          7z x Godot_v3.0.2-stable_win64.exe.zip
          mv Godot_v3.0.2-stable_win64.exe godot.exe
        }

  # Install Godot export templates
  - ps: |-
        if (!(Test-Path 'export_templates.tpz')) {
          Start-FileDownload 'https://downloads.tuxfamily.org/godotengine/3.0.2/Godot_v3.0.2-stable_export_templates.tpz' -fileName export_templates.tpz
          7z x export_templates.tpz
          mkdir        C:\Users\appveyor\AppData\Roaming\Godot\templates
          mv templates C:\Users\appveyor\AppData\Roaming\Godot\templates\3.0.2.stable
        }

# Export game for the different platforms
# Then move generated artifacts into project directory, which is required by AppVeyor
# to be able to mark them as artifacts.
build_script:
  - ps: |-
        $program='c:\game-tmp\godot.exe'
        $timeout=30
        $arguments='-v --path c:\game --export "Windows Desktop" c:\game-build\windows\game.exe'; c:\game\ci\run_with_timeout.ps1
        $arguments='-v --path c:\game --export "Linux/X11"       c:\game-build\linux\game';       c:\game\ci\run_with_timeout.ps1
        $arguments='-v --path c:\game --export "Mac OSX"         c:\game-build\mac\game';         c:\game\ci\run_with_timeout.ps1
        $arguments='-v --path c:\game --export "HTML5"           c:\game-build\html\index.html';  c:\game\ci\run_with_timeout.ps1
        mv c:\game-build\* c:\game\ci\build

artifacts:
  - path: ci\build\windows
    name: windows
  - path: ci\build\linux
    name: linux
  - path: ci\build\mac
    name: mac
  - path: ci\build\html
    name: html

deploy:
  - provider: GitHub
    artifact: /windows|linux|mac/
    draft: false
    prerelease: false
    on:
      appveyor_repo_tag: true # deploy on tag push only
